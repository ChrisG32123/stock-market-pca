#!/bin/bash --login
#SBATCH --job-name=FinancialMarketAnalysis
#SBATCH --nodes=4
#SBATCH --ntasks-per-node=8
#SBATCH --cpus-per-task=4
#SBATCH --mem=16G
#SBATCH --time=04:00:00
#SBATCH --output=FinancialMarketAnalysis-%j.out
#SBATCH --error=FinancialMarketAnalysis-%j.err
#SBATCH --partition=your_partition
#SBATCH --gres=gpu:2
#SBATCH --exclusive

# Load necessary modules
module purge
module load GCC OpenMPI NVHPC

# Check if CUDA devices are visible
if ! nvidia-smi; then
    echo "Failed to access NVIDIA CUDA GPUs, check the configuration."
    exit 1
fi

# Prepare environment variables
export OMP_NUM_THREADS=$SLURM_CPUS_PER_TASK

# Define your executable name
executable_name="/mnt/ufs18/home-245/gerlac37/final-project-ChrisG32123/Take2/financial_market_analysis.out"

# Compile executable
# Assume this is done beforehand or add compilation commands here

# Define arrays outside of the loops for simulation parameters
declare -a simulation_days=(365)
declare -a portfolio_sizes=(50 100 200)
declare -a num_threads=(1 2 4 $SLURM_CPUS_PER_TASK)
declare -a tasks_per_node=(1 2 4 8)

# Loop through configurations
for days in "${simulation_days[@]}"; do
    for portfolio_size in "${portfolio_sizes[@]}"; do
        for omp_threads in "${num_threads[@]}"; do
            for task_per_node in "${tasks_per_node[@]}"; do
                total_mpi_tasks=$(($task_per_node * $SLURM_NNODES))

                echo "Running simulation for $days days with portfolio size=$portfolio_size, OMP threads=$omp_threads, MPI tasks=$total_mpi_tasks"

                # Set the number of OpenMP threads dynamically
                export OMP_NUM_THREADS=$omp_threads

                # Define the number of simulations (e.g., 10000)
                num_simulations=10000

                # Execute the program with current configuration and capture the output
                srun -n $total_mpi_tasks --ntasks-per-node=$task_per_node --cpus-per-task=$omp_threads $executable_name $omp_threads $num_simulations

            done
        done
    done
done
