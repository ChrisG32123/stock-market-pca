#!/bin/bash --login
#SBATCH --job-name=FinancialMarketAnalysis
#SBATCH --nodes=2
#SBATCH --ntasks-per-node=16
#SBATCH --cpus-per-task=2
#SBATCH --mem=8G
#SBATCH --time=02:00:00
#SBATCH --output=FinancialMarketAnalysis-%j.out
#SBATCH --partition=your_partition

# Load necessary modules
module purge
module load GCC OpenMPI CUDA

# Prepare environment variables
export OMP_NUM_THREADS=$SLURM_CPUS_PER_TASK

# Define your executable name and path to the input data
executable_name="./financial_market_analysis.out"

# Varying configurations for analysis
matrix_sizes=(1000 2000 4000) # Example sizes, adjust based on your application
num_threads=(2 4 8 16) # OpenMP threads
num_tasks=(2 4 8 16) # MPI tasks, ensure it divides evenly with --ntasks-per-node

# Loop through configurations
for size in "${matrix_sizes[@]}"; do
    for omp_threads in "${num_threads[@]}"; do
        for mpi_tasks in "${num_tasks[@]}"; do
            # Set OpenMP threads
            export OMP_NUM_THREADS=$omp_threads
            
            # Print configuration
            echo "Running with size=$size, OMP threads=$omp_threads, MPI tasks=$mpi_tasks"
            
            # Execute the program with current configuration
            srun -n $mpi_tasks --ntasks-per-node=$(($mpi_tasks / $SLURM_NNODES)) $executable_name $size
            
            # Wait a bit between runs (optional, adjust as needed)
            sleep 10
        done
    done
done
